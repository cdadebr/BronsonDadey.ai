{
  "hash": "c5235f4ac8101ebbe93f0b88b8972d8f",
  "result": {
    "markdown": "---\ntitle: \"How to Easily Upload Models from Paperspace to Hugging Face Spaces\"\nauthor: \"Bronson Dadey\"\ndate: \"2022-12-22\"\ncategories: [fastai]\nimage: \"image.jpg\"\n---\n\n## Introduction\n\nNeed help uploading your Paperspace model to Hugging Face Spaces? This guide will show you how simple it is, with step-by-step instructions for fast.ai students and fast.ai library users.\n\n## Create a Space on Hugging Face Spaces\n\nTo create a new Hugging Face Space, click on the 'Spaces' navigation header to access the Spaces homepage. Then, click on the \"Create new Space\" button highlighted in the image below:\n\n![](images/Step%201.png){width=\"1200\"}\n\nCopy these options and click \"Create Space\":\n\n![](images/Step%201(1).png){width=\"1200\"}\n\nYour space is now all set up! It should look something like this:\n\n![](images/Step%201(2).png)\n\n## Clone the Hugging Face Spaces repository\n\nHead over to your Paperspace tab and click on the `.ipynb` file used to code your model. Use the following `!git` command to clone the repository (be sure to edit in your Hugging Face login details):\n\nSide note: copy and paste everything after `#` in the following code blocks.\n\n::: {.cell execution_count=1}\n``` {.python .cell-code}\n#!git clone https://\"username\"/\"password\"@huggingface.co/spaces/cdadebr/\"model_repo\"\n```\n:::\n\n\nA folder should appear in your Paperspace files directory with the same name as your Hugging Face space:\n\n![](images/Step%203-03.png)\n\n## Export your Paperspace model\n\nCreate a `Path` variable for your cloned repository folder. Use the `.export` method on your `Learner` variable and pass the path for your model as an argument using the `Path` variable. If you're following fast.ai convention, your `Learner` should be named `learn`:\n\n::: {.cell execution_count=2}\n``` {.python .cell-code}\n#model_path = Path('/notebooks/model_repo')\n#learn.export(model_path/'model.pkl')\n```\n:::\n\n\n## Create an `app.py` and `requirements.txt` file in your cloned repository\n\nChange the current directory on your Paperspace machine to the Hugging Face cloned repository using the `cd` command, followed by the path to the repository. Use the `!touch` command to create the `app.py` and `requirements.txt` files. Alternatively, you can navigate to the cloned repository in the 'Files' tab and manually create the `app.py` and `requirements.txt` files by clicking on the 'New File' icon and entering the desired file names:\n\n::: {.cell execution_count=3}\n``` {.python .cell-code}\n#cd model_tutorial\n#!touch app.py\n#!touch requirements.txt\n```\n:::\n\n\n![](images/Step%204-01.png)\n\n## Modify and add the following code to `app.py`\n\nThe following code was adapted from Tanishq Abraham's tutorial \"Gradio + Hugging Face Spaces\" ([**https://tmabraham.github.io/blog/gradio_hf_spaces_tutorial**](https://tmabraham.github.io/blog/gradio_hf_spaces_tutorial)). Make sure to edit the variables to fit the specifics of your model before pasting it. Credit goes to Tanishq Abraham for the original code.\n\n::: {.cell execution_count=4}\n``` {.python .cell-code}\n#import gradio as gr\n#from fastai.vision.all import *\n#import skimage\n\n#def get_y(o): return [parent_label(o)]\n\n#learn = load_learner('model.pkl')\n\n#labels = learn.dls.vocab\n\n#def predict(img):\n    #img = PILImage.create(img)\n    #pred,pred_idx,probs = learn.predict(img)\n    #return {labels[i]: float(probs[i]) for i in range(len(labels))}\n\n#title = \"Insert Your Model Title\"\n#description = \"Provide a Description of What Your Model Does\"\n#interpretation='default'\n#enable_queue=True\n\n#gr.Interface(fn=predict,inputs=gr.inputs.Image(shape=(512, 512)),outputs=gr.outputs.Label(num_top_classes=3),title=title,description=description,interpretation=interpretation,enable_queue=enable_queue).launch()\n```\n:::\n\n\n## Add the following code to `requirements.txt`\n\nNavigate to `requirements.txt` in the cloned repository and paste the following code:\n\n::: {.cell execution_count=5}\n``` {.python .cell-code}\n#fastai\n#scikit-image\n```\n:::\n\n\n## Log into git\n\nNavigate back to your `.ipynb` file and input these `!git` commands (remember to change the email address, username, and password to your account details):\n\n::: {.cell execution_count=6}\n``` {.python .cell-code}\n#!git config --global user.email \"email@hotmail.com\"\n#!git config --global user.name \"username\"\n#!git config --global user.password \"password\"\n```\n:::\n\n\n## Push your Paperspace cloned repository folder to Hugging Face\n\nBefore pushing anything to your Hugging Face space, ensure that the current directory you are working from is the cloned repository folder. You can check which directory you're currently in using `ls`. If you're in the correct directory, input these `!git` commands to upload your Paperspace model to your Hugging Face space:\n\n::: {.cell execution_count=7}\n``` {.python .cell-code}\n#!git add /notebooks/model_tutorial\n#!git commit -m \"Add application file\"\n#!git push\n```\n:::\n\n\nAnd that's it! You'll need to wait a few minutes for Hugging Face to build the Gradio web app but after that, your model should be live on Hugging Face and available for anyone to use!\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {}
  }
}